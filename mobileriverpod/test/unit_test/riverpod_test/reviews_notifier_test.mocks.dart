// Mocks generated by Mockito 5.4.4 from annotations
// in mobileriverpod/test/unit_test/riverpod_test/reviews_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mobileriverpod/domain/review/model/review_model.dart' as _i2;
import 'package:mobileriverpod/domain/review/model/update_review_model.dart'
    as _i5;
import 'package:mobileriverpod/infrastructure/review/repository/review_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeReview_0 extends _i1.SmartFake implements _i2.Review {
  _FakeReview_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ReviewRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockReviewRepository extends _i1.Mock implements _i3.ReviewRepository {
  MockReviewRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Review> createReview(
    String? jobId,
    _i2.Review? review,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createReview,
          [
            jobId,
            review,
          ],
        ),
        returnValue: _i4.Future<_i2.Review>.value(_FakeReview_0(
          this,
          Invocation.method(
            #createReview,
            [
              jobId,
              review,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Review>);

  @override
  _i4.Future<void> deleteReview(String? reviewId) => (super.noSuchMethod(
        Invocation.method(
          #deleteReview,
          [reviewId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.Review> updateReview(_i5.UpdateReviewDto? dto) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReview,
          [dto],
        ),
        returnValue: _i4.Future<_i2.Review>.value(_FakeReview_0(
          this,
          Invocation.method(
            #updateReview,
            [dto],
          ),
        )),
      ) as _i4.Future<_i2.Review>);

  @override
  _i4.Future<List<_i2.Review>> getReviewsByUser() => (super.noSuchMethod(
        Invocation.method(
          #getReviewsByUser,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Review>>.value(<_i2.Review>[]),
      ) as _i4.Future<List<_i2.Review>>);

  @override
  _i4.Future<List<_i2.Review>> getReviewsByJobId(String? jobId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviewsByJobId,
          [jobId],
        ),
        returnValue: _i4.Future<List<_i2.Review>>.value(<_i2.Review>[]),
      ) as _i4.Future<List<_i2.Review>>);
}
